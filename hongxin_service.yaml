apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend1
  labels:
    app: ui
    tier: frontend
spec:
  # here we select the number of pods we wish to start and the selector that tells our replica set which pods it needs 
  #  to manage
  replicas: 1
  selector:  # Using the selector we tell our replicaset which pods to manage
    matchLabels:
      tier: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  template:
    metadata:
      labels: 
        app: frontend1
        tier: frontend
      name: cuda-test
    spec:
      containers:
        - name: cuda-test
          image: "supergiantkir/animals:bear"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend2
  labels:
    app: ui
    tier: frontend
spec:
  # here we select the number of pods we wish to start and the selector that tells our replica set which pods it needs 
  #  to manage
  replicas: 2
  selector:  # Using the selector we tell our replicaset which pods to manage
    matchLabels:
      tier: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  template:
    metadata:
      labels: 
        app: frontend2
        tier: frontend
      name: cuda-test
    spec:
      containers:
        - name: cuda-test
          image: "supergiantkir/animals:moose"

---

apiVersion: v1
kind: Service      # Create new service 
metadata:
  name: my-service # Name of the service
spec:
  selector:
    type: canary-animals
  ports:          # Map incoming port to target port
  - name: http-web    # Setting multiple ports listterns 
    protocol: TCP
    port: 80
    targetPort: 80